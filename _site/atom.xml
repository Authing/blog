<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

 <title>Authing 官方博客 | 云端身份认证系统</title>
 <link href="http://localhost:4000/atom.xml" rel="self"/>
 <id>http://localhost:4000</id>
 <updated>2020-02-07T12:26:19+08:00</updated>
 <author>
   <name>Authing 官方博客 | 云端身份认证系统</name>
   <uri>https://authing.cn</uri>
   <email>xieyang@authing.cn</email>
 </author>

 

 <entry>
   <title>RBAC | 使用 Authing 实现组织机构管理</title>
   <link href="http://localhost:4000/%E4%BD%BF%E7%94%A8-Authing-%E5%AE%9E%E7%8E%B0%E7%BB%84%E7%BB%87%E6%9C%BA%E6%9E%84%E7%AE%A1%E7%90%86"/>
   <id>http://localhost:4000/使用 Authing 实现组织机构管理</id>
   <updated>2020-02-03T00:00:00+08:00</updated>
   <content type="html">&lt;h1 id=&quot;rbac--使用-authing-实现组织机构管理&quot;&gt;RBAC | 使用 Authing 实现组织机构管理&lt;/h1&gt; &lt;p&gt;借助 Authing，可以快速&lt;a href=&quot;https://mp.weixin.qq.com/s/zRiymhIjTqfUlymjkGfEsA&quot;&gt;实现基于角色的访问控制（RBAC）&lt;/a&gt;。简单来说，RBAC 指的是通过用户的角色（Role）赋予其相关权限，这实现了细粒度的访问控制，并提供了一个相比直接授予单个用户权限，更简单、可控的管理方式。&lt;/p&gt; &lt;p&gt;而在现实生活中，组、角色往往是分层嵌套的，呈树状结构，最常见的就是组织机构，如公司、学校等等。这篇文章，我们会设想一家互联网公司 —— 「非凡科技有限公司」，看看他们是如何使用 Authing 快速完成组织机构建模的。&lt;/p&gt; &lt;!-- more --&gt; &lt;h2 id=&quot;一非凡科技有限公司背景介绍&quot;&gt;一、非凡科技有限公司背景介绍&lt;/h2&gt; &lt;p&gt;该公司约 300 名员工，其公司架构大致如下：&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;一级部门有产品部、研发部、运营部、综合管理部&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;一级部门下面又有二级部门，如产品部中包含产品经理和设计等。&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;&lt;img src=&quot;https://cdn.authing.cn/blog/20200205182710.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt; &lt;p&gt;这是一个典型的树状数据结构，有且仅有一个根节点，以及多个分层的节点。一般而言，根节点就是一家公司、一个组织，其他的每个节点都对应一个部门。&lt;/p&gt; &lt;p&gt;‌&lt;/p&gt; &lt;p&gt;这里有一点需要注意：在 Authing 中，这样的节点对应的是一个 Group，比如「非凡科技有限公司」是一个 Group，「产品部」也是一个 Group。我们要做的，是要把这些 Group 放到他在树上所属的位置。&lt;/p&gt; &lt;p&gt;一个 Group 可以拥有多个角色（Role），一个角色包含一个或多个权限（Permission）；而一个 Group 由若干用户（User）组成，某个...</content>
 </entry>

 

 <entry>
   <title>普通人能理解的 Authing 介绍</title>
   <link href="http://localhost:4000/%E6%99%AE%E9%80%9A%E4%BA%BA%E8%83%BD%E7%90%86%E8%A7%A3%E7%9A%84-Authing-%E4%BB%8B%E7%BB%8D"/>
   <id>http://localhost:4000/普通人能理解的 Authing 介绍</id>
   <updated>2020-02-01T00:00:00+08:00</updated>
   <content type="html">&lt;h1 id=&quot;普通人能理解的-authing-介绍&quot;&gt;普通人能理解的 Authing 介绍&lt;/h1&gt; &lt;p&gt;&lt;img src=&quot;https://cdn.authing.cn/blog/20200205191445.png&quot; alt=&quot;&quot; /&gt;Authing 解决什么问题？&lt;/p&gt; &lt;h2 id=&quot;解决开发者的问题&quot;&gt;解决开发者的问题&lt;/h2&gt; &lt;p&gt;在程序开发的过 程中，&lt;strong&gt;用户认证和权限处理是非常复杂的一个模块&lt;/strong&gt;。涉及到很多枯燥，重复的工作，比如验证用户身份，验证权限，密码加密与校验，鉴权（这又涉及到安全）。&lt;/p&gt; &lt;p&gt;举个现实例子：比如你是一个办公自动化软件厂商，你新签了一个客户，对方是一个 5 万人的企业组织，你是否要在你的软件里新建 5 万个账户？ 你准备如何建？ 你是否在你的程序设计中考虑未来的这个场景？如果再复杂一点场景的呢（比如这 5 万人的组织，还需要和他们业务上下游供应商的软件系统打通身份认证进而数据共享，你准备通过哪一个协议，如何实现这个对接）？&lt;/p&gt; &lt;p&gt;你是否需要有人来解决这些问题？10天？ 20 天？ 30 天？还是 60 天？它的成本是多少？可能存在的风险？&lt;/p&gt; &lt;!-- more --&gt; &lt;h2 id=&quot;解决企业管理者的问题&quot;&gt;解决企业管理者的问题&lt;/h2&gt; &lt;p&gt;你是一个企业管理者，你的公司可能采购了或使用了 2~3 套不同的软件供货商的产品。你的员工还要使用你供应链上下游供货厂商的软件系统，你的员工是否在这些不同的环境当中，一套密码走天下，或和他人共享账号？你是否可以知晓并管控这些风险？&lt;/p&gt; &lt;p&gt;在这些不同网络边界环境中，你如何区分，分析，那些异常的登录，异常的访问？如何确保你业务数据的安全？ 是否可以通过这些登录的数据，不同应用间访问调用的授权记录，分析、识别你业务潜在的风险与变化。&lt;/p&gt; &lt;p&gt;当你的应用需要和你供应链上下游厂家的应用共享数据，你如何实现不同组织间、不同应用间的权限对接，身份追踪？你是否需要跨组织的身份识别，进而是身份授权（经理的权限和员工的权限的授权区别），你准备如何打通，如何处理不同组织间身份的识别与鉴权，进而实现数据共享，同时保证整个业务链更流畅，更安全？&lt;/p&gt; &lt;p&gt;当你面对 2~3 个不同软件供货商也许还好，那当我们把这个数量放大到 8~10，每一个员工的入职，离职，职位变动是否都牵涉到账号的开通和权限管理，注销和变更。每一个软件系统，每一个不同员工，每一个不同身份变更，需要多少次操作？我想没有人会喜欢这个操作。&lt;/p&gt; &lt;p&gt;当你面对不止一家供货商的软件系统，面对他们各自不同的后端用户系统，鉴权管理，技术实现。你计划如何应付自如？&lt;/p&gt; &lt;h2 id=&quot;解决终端用户的问题&quot;&gt;解决终端用户的问题&lt;/h2&gt; &lt;p&gt;作为终端用户，你是否每天要面对不同的应用、 不同的系统、不同的账号？ 牢记不同的密码，不同的用户名？...</content>
 </entry>

 

 <entry>
   <title>论文推荐：通过让公民控制自己的数据简化政府流程</title>
   <link href="http://localhost:4000/%E8%AE%BA%E6%96%87%E6%8E%A8%E8%8D%90-%E9%80%9A%E8%BF%87%E8%AE%A9%E5%85%AC%E6%B0%91%E6%8E%A7%E5%88%B6%E8%87%AA%E5%B7%B1%E7%9A%84%E6%95%B0%E6%8D%AE%E7%AE%80%E5%8C%96%E6%94%BF%E5%BA%9C%E6%B5%81%E7%A8%8B"/>
   <id>http://localhost:4000/论文推荐：通过让公民控制自己的数据简化政府流程</id>
   <updated>2020-01-29T00:00:00+08:00</updated>
   <content type="html">&lt;h2 id=&quot;论文推荐通过让公民控制自己的数据简化政府流程&quot;&gt;论文推荐：通过让公民控制自己的数据简化政府流程&lt;/h2&gt; &lt;p&gt;&lt;img src=&quot;https://cdn.authing.cn/blog/tim-berners-lee-solid.jpg&quot; style=&quot;zoom:60%;&quot; /&gt;&lt;/p&gt; &lt;p&gt;&lt;a href=&quot;https://inrupt.com/solid&quot;&gt;SoLiD&lt;/a&gt; 是一个令人兴奋的新项目，由万维网发明者 Tim Berners-Lee 爵士在麻省理工学院启动。 该项目旨在从根本上改变 Web 应用程序的中心化趋势， 它将真正地让数据所有权属于用户，并改善隐私问题。&lt;/p&gt; &lt;p&gt;本文是 SoLiD 项目在比利时的实践经验，作者有 Web 创始人 Tim 爵士、SoLiD 的核心开发者 Euben Verborgh（编者最爱的一名 SoLiD 开发者）等。详见 [SoLid中文社区]: https://learnsolid.cn/，对「数据主权」主题感兴趣的读者可以加微信：&lt;code class=&quot;highlighter-rouge&quot;&gt;jinjian0414&lt;/code&gt; ，加入微信群讨论。&lt;/p&gt; &lt;!-- more --&gt; &lt;p&gt;&lt;strong&gt;适合阅读本文的读者包括：&lt;/strong&gt;&lt;/p&gt; &lt;ol&gt; &lt;li&gt;对新技术和自动化敏感、能感知技术趋势的开发者；&lt;/li&gt; &lt;li&gt;渴望提升国家治理水平的官员；&lt;/li&gt; &lt;li&gt;医疗和保险等民生行业的从业者；&lt;/li&gt; &lt;li&gt;渴望创新的企业家；&lt;/li&gt; &lt;li&gt;在寻找新方向、敢于承担巨大风险的投资者；&lt;/li&gt; &lt;li&gt;对新趋势好奇的早期尝鲜者；&lt;/li&gt; &lt;/ol&gt; &lt;p&gt;&lt;strong&gt;本文作者&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;Raf Buyle, Ruben Taelman, Katrien...</content>
 </entry>

 

 <entry>
   <title>RBAC | 实现基于角色的访问控制</title>
   <link href="http://localhost:4000/RBAC%E5%AE%9E%E7%8E%B0%E5%9F%BA%E4%BA%8E%E8%A7%92%E8%89%B2%E7%9A%84%E8%AE%BF%E9%97%AE%E6%8E%A7%E5%88%B6"/>
   <id>http://localhost:4000/RBAC实现基于角色的访问控制</id>
   <updated>2020-01-17T00:00:00+08:00</updated>
   <content type="html">&lt;h1 id=&quot;rbac--实现基于角色的访问控制&quot;&gt;RBAC | 实现基于角色的访问控制&lt;/h1&gt; &lt;p&gt;&lt;img src=&quot;https://cdn.authing.cn/blog/20200205182555.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt; &lt;h2 id=&quot;一认证-vs-授权&quot;&gt;&lt;strong&gt;一、认证 vs 授权？&lt;/strong&gt;&lt;/h2&gt; &lt;p&gt;首先让我们用一句话区分认证（Authentication）和授权（Authorization）：&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;认证是识别请求方是谁的过程；&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;授权是知道了请求方是谁之后，判断其是否具备某些权限的过程；&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Authing 支持非常丰富的认证、授权手段：&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;认证手段有：传统密码、验证码登录、丰富的第三方登录（微信、小程序、微博、GitHub、支付宝、QQ 等，未来还会有更多），以及企业级的 LDAP、SAML、OIDC 等。&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;授权手段有：完整的 OAuth、OIDC 流程。&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;对于授权流程，访问控制（Access Control）策略是非常重要的一环，目前 Authing 一共支持（或即将支持）三种访问控制手段：&lt;/p&gt; &lt;ul&gt; &lt;li&gt;老版本的用户角色（deprecated）&lt;/li&gt; &lt;/ul&gt; &lt;!-- more --&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;&lt;strong&gt;RBAC（基于角色的访问控制，2020/02/03 已经上线）&lt;/strong&gt;&lt;/p&gt;...</content>
 </entry>

 

 <entry>
   <title>使用 Authing 与 AWS 服务集成</title>
   <link href="http://localhost:4000/%E4%BD%BF%E7%94%A8Authing%E4%B8%8EAWS%E6%9C%8D%E5%8A%A1%E9%9B%86%E6%88%90"/>
   <id>http://localhost:4000/使用Authing与AWS服务集成</id>
   <updated>2019-12-20T00:00:00+08:00</updated>
   <content type="html">&lt;h1 id=&quot;使用-authing-与-aws-服务集成&quot;&gt;使用 Authing 与 AWS 服务集成&lt;/h1&gt; &lt;p&gt;Authing 是一个开发者友好、拓展性极高的身份认证云服务，每月有超过 100 万次用户被 Authing 认证和授权。本次分享将介绍如何企业常见的认证授权场景，可以满足中国本地用户对于 Cognito User Pool 的需求，并且提供本地化的服务。同时本文将讲解 Authing 如何与 AWS 各类服务集成，如 Cognito Identity Pool, IAM, S3, Lambda, AD 等等。&lt;/p&gt; &lt;!-- more --&gt; &lt;h2 id=&quot;cognito-identity-pool&quot;&gt;Cognito Identity Pool&lt;/h2&gt; &lt;p&gt;Cognito User Pool 负责认证。终端用户可以通过 user pool 完成注册登录流程。&lt;/p&gt; &lt;p&gt;Cognito Identity Pool 负责授权（访问控制），将使用 AWS 资源的权利授权给终端用户。&lt;/p&gt; &lt;p&gt;Amazon Web...</content>
 </entry>

 

 <entry>
   <title>万维网之父的数据主权革命</title>
   <link href="http://localhost:4000/%E4%B8%87%E7%BB%B4%E7%BD%91%E4%B9%8B%E7%88%B6%E7%9A%84%E6%95%B0%E6%8D%AE%E4%B8%BB%E6%9D%83%E9%9D%A9%E5%91%BD"/>
   <id>http://localhost:4000/万维网之父的数据主权革命</id>
   <updated>2019-11-20T00:00:00+08:00</updated>
   <content type="html">&lt;h1 id=&quot;web-全栈大会万维网之父的数据主权革命&quot;&gt;Web 全栈大会：万维网之父的数据主权革命&lt;/h1&gt; &lt;p&gt;大家好，今天我和大家分享一下由万维网之父发起的一场数据主权革命。什么叫数据主权？很容易理解，现在我们的数据是把持在巨头手里的，你的微信通讯录和聊天记录都无法导出，不管是从人权角度还是从法理角度，这些数据应该都是属于你的，但是你没有控制权，SoLiD 要做的核心的一件事就是让这些数据归于用户控制。它带来了一种全新的开发范式，这个范式是啥我们接下来会有介绍。那么什么是革命？革谁的命？也非常清晰，就是革那些体大不尊的巨头的命。&lt;/p&gt; &lt;!-- more --&gt; &lt;blockquote&gt; &lt;p&gt;本文整理自蒸汽记忆创始人谢扬在 2019 年 11 月 16 日在成都 Web 全栈大会上的演讲，内容有删改。 完整PPT 可从 Github 上查看：https://leinue.github.io/webfullstack-2019/index.html&lt;/p&gt; &lt;/blockquote&gt; &lt;p&gt;&lt;img src=&quot;https://cdn.authing.cn//blog/WX20191120-081809@2x.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt; &lt;p&gt;那么在开始之前呢，我先按照惯例自我介绍下。我目前在创业，我们公司的名字叫做蒸汽记忆，取自工业革命的开始，我们想做提高社会的生产力的事情，并将全球的公开信息变成知识图谱。我们的使命是在一个身份下互联全人类的文化基因，构建全球互联的生产力平台。同时，我是 SoLiD 中文网的发起人，SoLiD 就是今天要讲的主题。在职业经历上，我是一名 Web 全栈开发者，其次也是知识图谱研究者。在创业之前，我曾经任职好东西传送门的 CTO，当时主要负责知识推荐和舆情分析等工作。在字节跳动时主要负责一款日活过亿的 Serverless 产品的研发和产品设计工作。&lt;/p&gt; &lt;p&gt;最后，我还是一名共产主义者。&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;https://cdn.authing.cn//blog/WX20191120-082031@2x.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt; &lt;p&gt;那么下面，我们就开始进入 SoLiD 和数据主权革命的主题了。&lt;/p&gt; &lt;p&gt;在正式介绍 SoLiD 之前，我先介绍下 SoLiD 的发起人，万维网之父 Tim。他最大的贡献是制定了...</content>
 </entry>

 

 <entry>
   <title>身份上云 or 自建？这里有 20 个问题值得你思考</title>
   <link href="http://localhost:4000/%E8%BA%AB%E4%BB%BD%E4%B8%8A%E4%BA%91-or-%E8%87%AA%E5%BB%BA-%E8%BF%99%E9%87%8C%E6%9C%89-20-%E4%B8%AA%E9%97%AE%E9%A2%98%E5%80%BC%E5%BE%97%E4%BD%A0%E6%80%9D%E8%80%83"/>
   <id>http://localhost:4000/身份上云 or 自建？这里有 20 个问题值得你思考</id>
   <updated>2019-10-27T00:00:00+08:00</updated>
   <content type="html">&lt;h1 id=&quot;身份上云-or-自建这里有-20-个问题值得你思考&quot;&gt;身份上云 or 自建？这里有 20 个问题值得你思考&lt;/h1&gt; &lt;p&gt;&lt;img src=&quot;https://cdn.authing.cn/blog/20191027184218.png&quot; alt=&quot;&quot; /&gt; 身份管理自从计算机问世以来就存在，很多人觉得身份管理很简单，其实难度远超你的想象。&lt;/p&gt; &lt;!-- more --&gt; &lt;h2 id=&quot;一为什么要自建身份管理&quot;&gt;一、为什么要自建身份管理？&lt;/h2&gt; &lt;p&gt;自计算机问世以来，身份管理一直是软件的主要组成部分：打孔机和早期操作系统都受到用户名/密码身份验认证的保护。拥有如此悠久的历史，你会认为身份管理是一个已经被妥善解决的问题。&lt;/p&gt; &lt;p&gt;自建身份管理一般在以下场景有充足的理由：&lt;/p&gt; &lt;ol&gt; &lt;li&gt;你正在做一些简单的事情：没有敏感信息或隐私问题，并且你的安全性要求不高，你的用户数量不多，同时用户类型比较单一，只有几个应用程序；&lt;/li&gt; &lt;li&gt;你是一位经验丰富的开发人员，并且在顶尖团队中工作，多年来一直为应用程序，网站，API 和服务构建身份认证；&lt;/li&gt; &lt;li&gt;某天你的预算减少了，这时你必须选择一些方案来为组织的大战略省钱；&lt;/li&gt; &lt;/ol&gt; &lt;p&gt;坦白说，如果你只有一个简单的 Web 应用，只需要一两个社交应用提供一键登录，并且不需要「用户名 - 密码」或其他更细致的用来登录的功能，那么自建就很容易。你可以在 Github 上找到大量开源框架来解决此类问题。&lt;/p&gt; &lt;h2 id=&quot;二为什么要购买身份管理服务&quot;&gt;二、为什么要购买身份管理服务？&lt;/h2&gt; &lt;p&gt;我们经常听到客户的研发团队这么评价 Authing：&lt;/p&gt; &lt;blockquote&gt; &lt;p&gt;我们自己就能做，为什么要用你们的，而且还要付钱？&lt;/p&gt; &lt;/blockquote&gt; &lt;p&gt;接下来让我们深入研究这个问题。&lt;/p&gt; &lt;h3 id=&quot;1专业的人做专业的事&quot;&gt;1、专业的人做专业的事&lt;/h3&gt; &lt;p&gt;实现一套身份管理看上去似乎很简单。但是失败是很可怕的，一旦出现了问题，你的品牌就会受到严重损害。面对持续的黑客攻击，和无休止的漏洞，你是否能准确知道自己的工作足够好到可以保护用户隐私和企业资产？&lt;/p&gt; &lt;h3 id=&quot;2投入产出比&quot;&gt;2、投入产出比&lt;/h3&gt; &lt;p&gt;&lt;strong&gt;自建身份管理并不是免费的！&lt;/strong&gt; 将资源到投入身份管理研发时会产生高昂的的机会成本。身份认证真的是你想要做的吗？假如你做一款应用，会自己写一套 RDBMS(关系数据库管理系统) 吗？身份管理就像 RDBMS，当你可以花合理的钱将非核心的繁重工作委派给专业人士时，为什么还要自建身份管理等基础设施呢？身份泄漏产生的成本可能高达数百万美元，你能否认身份安全没有价值吗？在评估购买身份管理服务的投资回报率时，请考虑这些因素。&lt;/p&gt; &lt;h3...</content>
 </entry>

 

 <entry>
   <title>为什么所有软件都应该使用单点登录来管理用户？</title>
   <link href="http://localhost:4000/%E4%B8%BA%E4%BB%80%E4%B9%88%E6%89%80%E6%9C%89%E8%BD%AF%E4%BB%B6%E9%83%BD%E5%BA%94%E8%AF%A5%E4%BD%BF%E7%94%A8%E5%8D%95%E7%82%B9%E7%99%BB%E5%BD%95%E6%9D%A5%E7%AE%A1%E7%90%86%E7%94%A8%E6%88%B7"/>
   <id>http://localhost:4000/为什么所有软件都应该使用单点登录来管理用户？</id>
   <updated>2019-10-25T00:00:00+08:00</updated>
   <content type="html">&lt;h1 id=&quot;2019-10-25-为什么所有软件都应该使用单点登录来管理用户&quot;&gt;2019-10-25-为什么所有软件都应该使用单点登录来管理用户？&lt;/h1&gt; &lt;!-- more --&gt; &lt;p&gt;&amp;lt;div align=center&amp;gt;&lt;img src=&quot;https://cdn.authing.cn/blog/20191025183717.png&quot; width=&quot;500&quot; /&gt; &amp;lt;/div&amp;gt;&lt;/p&gt; &lt;h2 id=&quot;一什么是单点登录&quot;&gt;一、什么是单点登录？&lt;/h2&gt; &lt;p&gt;&amp;lt;div align=center&amp;gt;&lt;img src=&quot;https://cdn.authing.cn/blog/20190908080023.png&quot; width=&quot;300&quot; /&gt; &amp;lt;/div&amp;gt; 单点登录（Single Sign On），简称为 SSO，是目前比较流行的企业业务整合的解决方案之一。SSO 的定义是在多个应用系统中，用户只需要登录一次就可以访问所有相互信任的应用系统。&lt;/p&gt; &lt;h2 id=&quot;二使用-sso-带来的业务优势&quot;&gt;二、使用 SSO 带来的「业务优势」&lt;/h2&gt; &lt;h3 id=&quot;1提高用户的效率&quot;&gt;1）提高用户的效率&lt;/h3&gt; &lt;p&gt;用户不再被多次登录困扰，也不需要记住多个 ID 和密码。另外，用户忘记密码并求助于支持人员的情况也会减少。&lt;/p&gt; &lt;h3 id=&quot;2提高开发人员的效率&quot;&gt;2）提高开发人员的效率&lt;/h3&gt; &lt;p&gt;SSO 为开发人员提供了一个通用的身份验证框架。实际上，如果 SSO 机制是独立的，那么开发人员就完全不需要为身份验证操心。他们可以假设，只要对应用程序的请求附带一个用户名，身份验证就已经完成了。&lt;/p&gt; &lt;h3 id=&quot;3简化管理&quot;&gt;3）简化管理&lt;/h3&gt; &lt;p&gt;如果应用程序加入了单点登录协议，管理用户帐号的负担就会减轻。简化的程度取决于应用程序，因为 SSO 只处理身份验证。所以，应用程序可能仍然需要设置用户的属性（比如访问特权）。&lt;/p&gt; &lt;p&gt;这些都属于业务上的优势，除了业务上的优势外，还有软件架构层面的优势。&lt;/p&gt; &lt;h2 id=&quot;三使用-sso-带来的软件架构层面的优势&quot;&gt;三、使用 SSO 带来的「软件架构层面的优势」&lt;/h2&gt; &lt;h3...</content>
 </entry>

 

 <entry>
   <title>将内容看作新的基础设施：Content as a Service</title>
   <link href="http://localhost:4000/%E5%B0%86%E5%86%85%E5%AE%B9%E7%9C%8B%E4%BD%9C%E6%96%B0%E7%9A%84%E5%9F%BA%E7%A1%80%E8%AE%BE%E6%96%BDCaaS"/>
   <id>http://localhost:4000/将内容看作新的基础设施CaaS</id>
   <updated>2019-10-15T00:00:00+08:00</updated>
   <content type="html">&lt;p&gt;内容是每家企业的必争之地，根据 CMI 的数据报告，88% 的 B2B 企业每天至少产生一篇内容。内容正在成为新的基础设施，Content as a Service 可以被简单理解为一种 CMS（Content Management Systen，内容管理系统），但是和传统的 CMS （如 Wordpress、Drupal 等）完全不同。传统 CMS 聚焦于内容管理和创建网站（比如 Wordpress 提供的大量网站模版），而 CaaS 只聚焦于内容的生产，并以 API （应用程序编程接口）的形式向外提供服务，这些 API 可被二次编程，从而用于打印机、移动应用或者其他设备上。&lt;/p&gt; &lt;!-- more --&gt; &lt;p&gt;在这篇文章中，你将了解到什么是 CaaS 以及为什么内容是一种新的基础设施。在你想要使用 CaaS 时，本文可作为对比 CMS 和 CaaS 优劣的参考文章。我们还会罗列一些 CaaS 的使用场景，帮助你更好的了解 CaaS。&lt;/p&gt; &lt;h2 id=&quot;内容是新的基础设施&quot;&gt;内容是新的基础设施&lt;/h2&gt; &lt;p&gt;互联网上的所有应用都是信息管理软件，这些软件在本质上是由&lt;strong&gt;一张张互相联系的表&lt;/strong&gt;组成的（如果你不理解这句话，那么你可以将一个网站想象成三张 Excel 表，一张表存储网站用户，一张表存储网站内容，还有一张表存储网站分类）。当你使用一个传统 CMS 时，你可以创建一些分类，并在分类上面撰写文章，这样的操作在网站时代是比较友好的，因为每个用户都只有一个平台 ——...</content>
 </entry>

 

 <entry>
   <title>什么是单点登录以及为什么需要单点登录</title>
   <link href="http://localhost:4000/%E4%BB%80%E4%B9%88%E6%98%AF%E5%8D%95%E7%82%B9%E7%99%BB%E5%BD%95%E4%BB%A5%E5%8F%8A%E4%B8%BA%E4%BB%80%E4%B9%88%E9%9C%80%E8%A6%81%E5%8D%95%E7%82%B9%E7%99%BB%E5%BD%95"/>
   <id>http://localhost:4000/什么是单点登录以及为什么需要单点登录</id>
   <updated>2019-10-15T00:00:00+08:00</updated>
   <content type="html">&lt;p&gt;单点登录是企业系统中的&lt;/p&gt;

&lt;!-- more --&gt;
</content>
 </entry>

 

</feed>